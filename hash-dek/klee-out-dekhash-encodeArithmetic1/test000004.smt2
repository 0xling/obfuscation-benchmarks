(set-logic QF_AUFBV )
(declare-fun arg0 () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun model_version () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (select  arg0 (_ bv2 32) ) ) (?B2 (select  arg0 (_ bv3 32) ) ) (?B3 (select  arg0 (_ bv1 32) ) ) (?B4 (select  arg0 (_ bv5 32) ) ) (?B5 (select  arg0 (_ bv4 32) ) ) (?B6 (select  arg0 (_ bv0 32) ) ) ) (let ( (?B10 ((_ sign_extend 24)  ?B4 ) ) (?B9 ((_ sign_extend 24)  ?B3 ) ) (?B11 ((_ sign_extend 24)  ?B5 ) ) (?B12 ((_ sign_extend 24)  ?B6 ) ) (?B8 ((_ sign_extend 24)  ?B2 ) ) (?B7 ((_ sign_extend 24)  ?B1 ) ) ) (let ( (?B13 (bvsub  (bvor  ?B12 (_ bv192 32) ) (bvand  ?B12 (_ bv192 32) ) ) ) ) (let ( (?B14 (bvor  (bvshl  ?B13 (_ bv5 32) ) (bvlshr  ?B13 (_ bv27 32) ) ) ) ) (let ( (?B15 (bvsub  (bvor  ?B14 ?B9 ) (bvand  ?B9 ?B14 ) ) ) ) (let ( (?B16 (bvor  (bvshl  ?B15 (_ bv5 32) ) (bvlshr  ?B15 (_ bv27 32) ) ) ) ) (let ( (?B17 (bvsub  (bvor  ?B16 ?B7 ) (bvand  ?B7 ?B16 ) ) ) ) (let ( (?B18 (bvor  (bvshl  ?B17 (_ bv5 32) ) (bvlshr  ?B17 (_ bv27 32) ) ) ) ) (let ( (?B19 (bvsub  (bvor  ?B18 ?B8 ) (bvand  ?B8 ?B18 ) ) ) ) (let ( (?B20 (bvor  (bvshl  ?B19 (_ bv5 32) ) (bvlshr  ?B19 (_ bv27 32) ) ) ) ) (let ( (?B21 (bvsub  (bvor  ?B20 ?B11 ) (bvand  ?B11 ?B20 ) ) ) ) (let ( (?B22 (bvor  (bvshl  ?B21 (_ bv5 32) ) (bvlshr  ?B21 (_ bv27 32) ) ) ) ) (and  (and  (and  (and  (and  (and  (and  (and  (=  (_ bv1 32) (concat  (select  model_version (_ bv3 32) ) (concat  (select  model_version (_ bv2 32) ) (concat  (select  model_version (_ bv1 32) ) (select  model_version (_ bv0 32) ) ) ) ) ) (=  false (=  (_ bv0 8) ?B6 ) ) ) (=  false (=  (_ bv0 8) ?B3 ) ) ) (=  false (=  (_ bv0 8) ?B1 ) ) ) (=  false (=  (_ bv0 8) ?B2 ) ) ) (=  false (=  (_ bv0 8) ?B5 ) ) ) (=  false (=  (_ bv0 8) ?B4 ) ) ) (=  (_ bv0 8) (select  arg0 (_ bv6 32) ) ) ) (=  (_ bv3728958391 32) (bvsub  (bvor  ?B22 ?B10 ) (bvand  ?B10 ?B22 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
(check-sat-using (then simplify solve-eqs bit-blast sat tseitin-cnf))
(exit)
