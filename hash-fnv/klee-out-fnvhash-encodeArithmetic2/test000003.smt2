(set-logic QF_AUFBV )
(declare-fun arg0 () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun model_version () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (select  arg0 (_ bv2 32) ) ) (?B2 (select  arg0 (_ bv3 32) ) ) (?B3 (select  arg0 (_ bv1 32) ) ) (?B4 (select  arg0 (_ bv4 32) ) ) (?B5 (select  arg0 (_ bv0 32) ) ) ) (let ( (?B8 ((_ sign_extend 24)  ?B3 ) ) (?B9 ((_ sign_extend 24)  ?B4 ) ) (?B7 ((_ sign_extend 24)  ?B2 ) ) (?B6 ((_ sign_extend 24)  ?B1 ) ) (?B10 (bvxor  (_ bv4294967295 32) (bvxor  (_ bv4294967295 32) ((_ sign_extend 24)  ?B5 ) ) ) ) ) (let ( (?B15 (bvadd  (_ bv2166136262 32) (bvadd  ?B10 (bvxor  (_ bv2166136261 32) (bvor  ?B10 (_ bv2128831034 32) ) ) ) ) ) (?B16 (bvor  ?B10 (_ bv2166136261 32) ) ) (?B12 (bvxor  (_ bv4294967295 32) ?B7 ) ) (?B14 (bvxor  (_ bv4294967295 32) ?B9 ) ) (?B11 (bvxor  (_ bv4294967295 32) ?B6 ) ) (?B13 (bvxor  (_ bv4294967295 32) ?B8 ) ) ) (let ( (?B17 (bvadd  (_ bv2128831035 32) ?B16 ) ) (?B18 (bvadd  ?B10 (bvxor  (_ bv2128831034 32) ?B16 ) ) ) (?B19 (bvsub  ?B16 ?B10 ) ) ) (let ( (?B21 (bvadd  (bvmul  (bvand  ?B17 ?B19 ) (bvor  ?B17 ?B19 ) ) (bvmul  (bvand  ?B17 (bvadd  (_ bv4294967295 32) (bvsub  ?B10 ?B16 ) ) ) (bvand  (bvsub  (_ bv2166136260 32) ?B16 ) ?B19 ) ) ) ) (?B20 (bvadd  (_ bv1 32) ?B18 ) ) ) (let ( (?B22 (bvadd  (bvmul  (bvand  ?B20 ?B15 ) (bvor  ?B20 ?B15 ) ) (bvmul  (bvand  ?B20 (bvxor  (_ bv4294967295 32) ?B15 ) ) (bvand  (bvsub  (_ bv4294967294 32) ?B18 ) ?B15 ) ) ) ) ) (let ( (?B23 (bvsub  (bvshl  (bvor  ?B22 ?B21 ) (_ bv1 32) ) (bvxor  ?B22 ?B21 ) ) ) ) (let ( (?B24 (bvadd  (bvand  ?B23 ?B13 ) (bvxor  (_ bv4294967295 32) (bvadd  (_ bv1 32) (bvadd  (bvadd  ?B23 ?B13 ) (bvor  ?B8 (bvxor  (_ bv4294967295 32) ?B23 ) ) ) ) ) ) ) ) (let ( (?B25 (bvadd  (_ bv2166136262 32) (bvadd  ?B24 (bvxor  (_ bv2166136261 32) (bvor  ?B24 (_ bv2128831034 32) ) ) ) ) ) (?B26 (bvor  ?B24 (_ bv2166136261 32) ) ) ) (let ( (?B27 (bvadd  ?B24 (bvxor  (_ bv2128831034 32) ?B26 ) ) ) (?B28 (bvadd  (_ bv2128831035 32) ?B26 ) ) (?B29 (bvsub  ?B26 ?B24 ) ) ) (let ( (?B31 (bvadd  (bvmul  (bvand  ?B28 ?B29 ) (bvor  ?B28 ?B29 ) ) (bvmul  (bvand  ?B28 (bvadd  (_ bv4294967295 32) (bvsub  ?B24 ?B26 ) ) ) (bvand  (bvsub  (_ bv2166136260 32) ?B26 ) ?B29 ) ) ) ) (?B30 (bvadd  (_ bv1 32) ?B27 ) ) ) (let ( (?B32 (bvadd  (bvmul  (bvand  ?B30 ?B25 ) (bvor  ?B30 ?B25 ) ) (bvmul  (bvand  ?B30 (bvxor  (_ bv4294967295 32) ?B25 ) ) (bvand  (bvsub  (_ bv4294967294 32) ?B27 ) ?B25 ) ) ) ) ) (let ( (?B33 (bvsub  (bvshl  (bvor  ?B32 ?B31 ) (_ bv1 32) ) (bvxor  ?B32 ?B31 ) ) ) ) (let ( (?B34 (bvadd  (bvand  ?B33 ?B11 ) (bvxor  (_ bv4294967295 32) (bvadd  (_ bv1 32) (bvadd  (bvadd  ?B33 ?B11 ) (bvor  ?B6 (bvxor  (_ bv4294967295 32) ?B33 ) ) ) ) ) ) ) ) (let ( (?B35 (bvadd  (_ bv2166136262 32) (bvadd  ?B34 (bvxor  (_ bv2166136261 32) (bvor  ?B34 (_ bv2128831034 32) ) ) ) ) ) (?B36 (bvor  ?B34 (_ bv2166136261 32) ) ) ) (let ( (?B37 (bvadd  (_ bv2128831035 32) ?B36 ) ) (?B38 (bvadd  ?B34 (bvxor  (_ bv2128831034 32) ?B36 ) ) ) (?B39 (bvsub  ?B36 ?B34 ) ) ) (let ( (?B41 (bvadd  (bvmul  (bvand  ?B37 ?B39 ) (bvor  ?B37 ?B39 ) ) (bvmul  (bvand  ?B37 (bvadd  (_ bv4294967295 32) (bvsub  ?B34 ?B36 ) ) ) (bvand  (bvsub  (_ bv2166136260 32) ?B36 ) ?B39 ) ) ) ) (?B40 (bvadd  (_ bv1 32) ?B38 ) ) ) (let ( (?B42 (bvadd  (bvmul  (bvand  ?B40 ?B35 ) (bvor  ?B40 ?B35 ) ) (bvmul  (bvand  ?B40 (bvxor  (_ bv4294967295 32) ?B35 ) ) (bvand  (bvsub  (_ bv4294967294 32) ?B38 ) ?B35 ) ) ) ) ) (let ( (?B43 (bvsub  (bvshl  (bvor  ?B42 ?B41 ) (_ bv1 32) ) (bvxor  ?B42 ?B41 ) ) ) ) (let ( (?B44 (bvadd  (bvand  ?B43 ?B12 ) (bvxor  (_ bv4294967295 32) (bvadd  (_ bv1 32) (bvadd  (bvadd  ?B43 ?B12 ) (bvor  ?B7 (bvxor  (_ bv4294967295 32) ?B43 ) ) ) ) ) ) ) ) (let ( (?B45 (bvadd  (_ bv2166136262 32) (bvadd  ?B44 (bvxor  (_ bv2166136261 32) (bvor  ?B44 (_ bv2128831034 32) ) ) ) ) ) (?B46 (bvor  ?B44 (_ bv2166136261 32) ) ) ) (let ( (?B47 (bvadd  (_ bv2128831035 32) ?B46 ) ) (?B48 (bvadd  ?B44 (bvxor  (_ bv2128831034 32) ?B46 ) ) ) (?B49 (bvsub  ?B46 ?B44 ) ) ) (let ( (?B50 (bvadd  (_ bv1 32) ?B48 ) ) (?B51 (bvadd  (bvmul  (bvand  ?B47 ?B49 ) (bvor  ?B47 ?B49 ) ) (bvmul  (bvand  ?B47 (bvadd  (_ bv4294967295 32) (bvsub  ?B44 ?B46 ) ) ) (bvand  (bvsub  (_ bv2166136260 32) ?B46 ) ?B49 ) ) ) ) ) (let ( (?B52 (bvadd  (bvmul  (bvand  ?B50 ?B45 ) (bvor  ?B50 ?B45 ) ) (bvmul  (bvand  ?B50 (bvxor  (_ bv4294967295 32) ?B45 ) ) (bvand  (bvsub  (_ bv4294967294 32) ?B48 ) ?B45 ) ) ) ) ) (let ( (?B53 (bvsub  (bvshl  (bvor  ?B52 ?B51 ) (_ bv1 32) ) (bvxor  ?B52 ?B51 ) ) ) ) (and  (and  (and  (and  (and  (and  (and  (=  (_ bv1 32) (concat  (select  model_version (_ bv3 32) ) (concat  (select  model_version (_ bv2 32) ) (concat  (select  model_version (_ bv1 32) ) (select  model_version (_ bv0 32) ) ) ) ) ) (=  false (=  (_ bv0 8) ?B5 ) ) ) (=  false (=  (_ bv0 8) ?B3 ) ) ) (=  false (=  (_ bv0 8) ?B1 ) ) ) (=  false (=  (_ bv0 8) ?B2 ) ) ) (=  false (=  (_ bv0 8) ?B4 ) ) ) (=  (_ bv0 8) (select  arg0 (_ bv5 32) ) ) ) (=  (_ bv3996942804 32) (bvadd  (bvand  ?B53 ?B14 ) (bvxor  (_ bv4294967295 32) (bvadd  (_ bv1 32) (bvadd  (bvadd  ?B53 ?B14 ) (bvor  ?B9 (bvxor  (_ bv4294967295 32) ?B53 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
(check-sat-using (then simplify solve-eqs bit-blast sat tseitin-cnf))
(exit)
