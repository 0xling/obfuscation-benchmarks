(set-logic QF_AUFBV )
(declare-fun arg0 () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun model_version () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (select  arg0 (_ bv2 32) ) ) (?B2 (select  arg0 (_ bv3 32) ) ) (?B3 (select  arg0 (_ bv1 32) ) ) (?B4 (select  arg0 (_ bv4 32) ) ) (?B5 (select  arg0 (_ bv0 32) ) ) ) (let ( (?B8 ((_ sign_extend 24)  ?B3 ) ) (?B9 ((_ sign_extend 24)  ?B4 ) ) (?B10 ((_ sign_extend 24)  ?B5 ) ) (?B7 ((_ sign_extend 24)  ?B2 ) ) (?B6 ((_ sign_extend 24)  ?B1 ) ) ) (let ( (?B11 (bvadd  (_ bv132 32) (bvadd  ?B10 (bvxor  (_ bv131 32) (bvor  ?B10 (_ bv4294967164 32) ) ) ) ) ) (?B12 (bvor  ?B10 (_ bv131 32) ) ) ) (let ( (?B13 (bvadd  (_ bv4294967165 32) ?B12 ) ) (?B14 (bvsub  (bvxor  (_ bv4294967164 32) ?B12 ) (bvxor  (_ bv4294967295 32) ?B10 ) ) ) (?B15 (bvsub  ?B12 ?B10 ) ) ) (let ( (?B17 (bvadd  (bvmul  (bvand  ?B13 ?B15 ) (bvor  ?B13 ?B15 ) ) (bvmul  (bvand  ?B13 (bvadd  (_ bv4294967295 32) (bvsub  ?B10 ?B12 ) ) ) (bvand  (bvsub  (_ bv130 32) ?B12 ) ?B15 ) ) ) ) (?B16 (bvxor  (_ bv4294967295 32) ?B14 ) ) ) (let ( (?B18 (bvadd  (bvmul  (bvand  ?B14 ?B12 ) (bvor  (bvor  ?B10 ?B14 ) (_ bv131 32) ) ) (bvmul  (bvand  ?B14 (bvxor  (_ bv4294967164 32) (bvand  ?B10 (_ bv4294967164 32) ) ) ) (bvand  ?B12 ?B16 ) ) ) ) (?B19 (bvadd  (bvmul  (bvand  ?B14 ?B11 ) (bvor  ?B14 ?B11 ) ) (bvmul  (bvand  ?B14 (bvxor  (_ bv4294967295 32) ?B11 ) ) (bvand  ?B11 ?B16 ) ) ) ) ) (let ( (?B20 (bvadd  (bvor  ?B18 ?B17 ) (bvand  ?B18 ?B17 ) ) ) (?B21 (bvxor  (_ bv4294967295 32) (bvadd  (bvor  ?B19 ?B17 ) (bvand  ?B19 ?B17 ) ) ) ) ) (let ( (?B22 (bvadd  (bvadd  (bvadd  ?B20 ?B8 ) (bvxor  (_ bv4294967295 32) (bvand  ?B8 ?B20 ) ) ) (bvsub  (bvor  ?B8 ?B21 ) ?B21 ) ) ) ) (let ( (?B23 (bvadd  (_ bv1 32) ?B22 ) ) ) (let ( (?B24 (bvadd  (_ bv133 32) (bvadd  ?B22 (bvxor  (_ bv131 32) (bvor  ?B23 (_ bv4294967164 32) ) ) ) ) ) (?B25 (bvor  ?B23 (_ bv131 32) ) ) ) (let ( (?B26 (bvadd  (_ bv4294967295 32) (bvsub  ?B25 ?B22 ) ) ) (?B27 (bvadd  (_ bv4294967165 32) ?B25 ) ) (?B28 (bvsub  (bvxor  (_ bv4294967164 32) ?B25 ) (bvxor  (_ bv4294967295 32) ?B23 ) ) ) ) (let ( (?B29 (bvadd  (bvmul  (bvand  ?B27 ?B26 ) (bvor  ?B27 ?B26 ) ) (bvmul  (bvand  ?B27 (bvsub  ?B22 ?B25 ) ) (bvand  (bvsub  (_ bv130 32) ?B25 ) ?B26 ) ) ) ) (?B30 (bvxor  (_ bv4294967295 32) ?B28 ) ) ) (let ( (?B31 (bvadd  (bvmul  (bvand  ?B28 ?B24 ) (bvor  ?B28 ?B24 ) ) (bvmul  (bvand  ?B28 (bvxor  (_ bv4294967295 32) ?B24 ) ) (bvand  ?B24 ?B30 ) ) ) ) (?B32 (bvadd  (bvmul  (bvand  ?B28 ?B25 ) (bvor  (bvor  ?B23 ?B28 ) (_ bv131 32) ) ) (bvmul  (bvand  ?B28 (bvxor  (_ bv4294967164 32) (bvand  ?B23 (_ bv4294967164 32) ) ) ) (bvand  ?B25 ?B30 ) ) ) ) ) (let ( (?B34 (bvadd  (bvor  ?B32 ?B29 ) (bvand  ?B32 ?B29 ) ) ) (?B33 (bvxor  (_ bv4294967295 32) (bvadd  (bvor  ?B31 ?B29 ) (bvand  ?B31 ?B29 ) ) ) ) ) (let ( (?B35 (bvadd  (bvadd  (bvadd  ?B34 ?B6 ) (bvxor  (_ bv4294967295 32) (bvand  ?B6 ?B34 ) ) ) (bvsub  (bvor  ?B6 ?B33 ) ?B33 ) ) ) ) (let ( (?B36 (bvadd  (_ bv1 32) ?B35 ) ) ) (let ( (?B37 (bvadd  (_ bv133 32) (bvadd  ?B35 (bvxor  (_ bv131 32) (bvor  ?B36 (_ bv4294967164 32) ) ) ) ) ) (?B38 (bvor  ?B36 (_ bv131 32) ) ) ) (let ( (?B39 (bvadd  (_ bv4294967165 32) ?B38 ) ) (?B40 (bvadd  (_ bv4294967295 32) (bvsub  ?B38 ?B35 ) ) ) (?B41 (bvsub  (bvxor  (_ bv4294967164 32) ?B38 ) (bvxor  (_ bv4294967295 32) ?B36 ) ) ) ) (let ( (?B42 (bvadd  (bvmul  (bvand  ?B39 ?B40 ) (bvor  ?B39 ?B40 ) ) (bvmul  (bvand  ?B39 (bvsub  ?B35 ?B38 ) ) (bvand  (bvsub  (_ bv130 32) ?B38 ) ?B40 ) ) ) ) (?B43 (bvxor  (_ bv4294967295 32) ?B41 ) ) ) (let ( (?B44 (bvadd  (bvmul  (bvand  ?B41 ?B37 ) (bvor  ?B41 ?B37 ) ) (bvmul  (bvand  ?B41 (bvxor  (_ bv4294967295 32) ?B37 ) ) (bvand  ?B37 ?B43 ) ) ) ) (?B45 (bvadd  (bvmul  (bvand  ?B41 ?B38 ) (bvor  (bvor  ?B36 ?B41 ) (_ bv131 32) ) ) (bvmul  (bvand  ?B41 (bvxor  (_ bv4294967164 32) (bvand  ?B36 (_ bv4294967164 32) ) ) ) (bvand  ?B38 ?B43 ) ) ) ) ) (let ( (?B47 (bvadd  (bvor  ?B45 ?B42 ) (bvand  ?B45 ?B42 ) ) ) (?B46 (bvxor  (_ bv4294967295 32) (bvadd  (bvor  ?B44 ?B42 ) (bvand  ?B44 ?B42 ) ) ) ) ) (let ( (?B48 (bvadd  (bvadd  (bvadd  ?B47 ?B7 ) (bvxor  (_ bv4294967295 32) (bvand  ?B7 ?B47 ) ) ) (bvsub  (bvor  ?B7 ?B46 ) ?B46 ) ) ) ) (let ( (?B49 (bvadd  (_ bv1 32) ?B48 ) ) ) (let ( (?B50 (bvadd  (_ bv133 32) (bvadd  ?B48 (bvxor  (_ bv131 32) (bvor  ?B49 (_ bv4294967164 32) ) ) ) ) ) (?B51 (bvor  ?B49 (_ bv131 32) ) ) ) (let ( (?B52 (bvadd  (_ bv4294967295 32) (bvsub  ?B51 ?B48 ) ) ) (?B53 (bvadd  (_ bv4294967165 32) ?B51 ) ) (?B54 (bvsub  (bvxor  (_ bv4294967164 32) ?B51 ) (bvxor  (_ bv4294967295 32) ?B49 ) ) ) ) (let ( (?B55 (bvadd  (bvmul  (bvand  ?B53 ?B52 ) (bvor  ?B53 ?B52 ) ) (bvmul  (bvand  ?B53 (bvsub  ?B48 ?B51 ) ) (bvand  (bvsub  (_ bv130 32) ?B51 ) ?B52 ) ) ) ) (?B56 (bvxor  (_ bv4294967295 32) ?B54 ) ) ) (let ( (?B57 (bvadd  (bvmul  (bvand  ?B54 ?B50 ) (bvor  ?B54 ?B50 ) ) (bvmul  (bvand  ?B54 (bvxor  (_ bv4294967295 32) ?B50 ) ) (bvand  ?B50 ?B56 ) ) ) ) (?B58 (bvadd  (bvmul  (bvand  ?B54 ?B51 ) (bvor  (bvor  ?B49 ?B54 ) (_ bv131 32) ) ) (bvmul  (bvand  ?B54 (bvxor  (_ bv4294967164 32) (bvand  ?B49 (_ bv4294967164 32) ) ) ) (bvand  ?B51 ?B56 ) ) ) ) ) (let ( (?B60 (bvadd  (bvor  ?B58 ?B55 ) (bvand  ?B58 ?B55 ) ) ) (?B59 (bvxor  (_ bv4294967295 32) (bvadd  (bvor  ?B57 ?B55 ) (bvand  ?B57 ?B55 ) ) ) ) ) (and  (and  (and  (and  (and  (and  (and  (=  (_ bv1 32) (concat  (select  model_version (_ bv3 32) ) (concat  (select  model_version (_ bv2 32) ) (concat  (select  model_version (_ bv1 32) ) (select  model_version (_ bv0 32) ) ) ) ) ) (=  false (=  (_ bv0 8) ?B5 ) ) ) (=  false (=  (_ bv0 8) ?B3 ) ) ) (=  false (=  (_ bv0 8) ?B1 ) ) ) (=  false (=  (_ bv0 8) ?B2 ) ) ) (=  false (=  (_ bv0 8) ?B4 ) ) ) (=  (_ bv0 8) (select  arg0 (_ bv5 32) ) ) ) (=  (_ bv3180495537 32) (bvadd  (bvadd  (bvadd  ?B60 ?B9 ) (bvxor  (_ bv4294967295 32) (bvand  ?B9 ?B60 ) ) ) (bvsub  (bvor  ?B9 ?B59 ) ?B59 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
(check-sat-using (then simplify solve-eqs bit-blast sat tseitin-cnf))
(exit)
